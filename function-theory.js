// ФУНКЦИИ


//СТРОКИ https://learn.javascript.ru/string
// ЧИСЛА https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Number 



let num = 20; //глобальная функция, может использоваться внутри функции

function showFirstMessage(text) {
    alert(text);
    let num = 20; //локальная переменная, если её объявили внутри функции, то при вызове в консоль вне функции она видна не будет 
    //замыкание - функция со всеми внешними переменными, которые ей доступны. Если внутри функции удалить переменную, то консоль.лог будет искать вначале внутри функции, потом в глобальных переменных

    console.log(num);

    //если глобальная и локальная одноименны они будут считаться разными переменными
}

showFirstMessage("Hello World!");
console.log(num);


// showFirstMessage - имя функции, глагол показывающий действие функции, в название входит глагол и то над чем происходит действие. Бывают функции без имени - используются здесь и сейас, нельзя обращаться в будущем

// (text) - аргументы, данные которые она будет использзовать, чтобы функция что-то с ними сделала. Передавать можно n-кол-во

// showFirstMessage(); - команада чтобы вызвать функцию










// 1. Function Declaration - можно вызывать до объявления. Функция работает ещё до того как объявлена в коде

console.log(calc(3,4));
console.log(calc(8,4));

function calc(a, b) {
    return(a + b); //return - возвращает значение переменной
}



// 2. Function Expression - Функцию присваиваем в переменную. Функция создается только тогда когда код до неё доходит. Вначале объявляется функция, только потом вызывается

let calc = function (a, b) {
    return(a + b);
}

console.log(calc(3,4));
console.log(calc(8,4));


// 3. ES6 стандарт. => - стрелочная функция. Не имеет своего контекста вызова, чаще всего можно встретить в обработчиках событий. Не во всех случаях можно использовать
let calc = (a, b) => a+b; // a+b можно записать в []
console.log(calc(3,4));
console.log(calc(8,4));






function reVar() {
    let num = 50; // таким образом можно вытаскивать множество значений переменных
    return num;
}

let anotherNum = reVar(); //в эту переменную можно записать значение функции, таким образом возвращать её во внешний мир 
console.log(anotherNum);






// СВОЙСТВА

// свойство length - для получения длины строки, и других типов данных. Свойство пишется без круглых скобок
let str = "test";
console.log(str.length);


// МЕТОДЫ - позволяют изменять строки или какие-то другие типы данных

// метод toUpperCase - напишет test с большой буквы 
console.log(str.toUpperCase());
console.log(str.toLowerCase());


let twelve = "12.2"; //строка, которую можем преобразовать в число и округлить до ближ целого числа командой (Math.round())
console.log(Math.round(twelve));

//parseInt - переводит в другую систему исчеслений двоичную, десятичную и тд
let twelve = "12.2px"; 
console.log(parseInt(twelve)); //округлил до целого числа
console.log(parseFloat(twelve)); //вернулось десятичное число 12.2